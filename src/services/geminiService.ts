// Following the referenced GitHub repository structure for services
// Completely frontend implementation using Gemini SDK directly

import { GoogleGenerativeAI } from '@google/generative-ai';

// Initialize Gemini AI - using environment variable from Vite
const genAI = new GoogleGenerativeAI(import.meta.env.VITE_GEMINI_API_KEY || '');

export const generateImage = async (imageData: string): Promise<string> => {
  try {
    const prompt = 'Make this sketch photorealistic.';
    
    // Clean base64 data (remove data:image/png;base64, prefix if present)
    const cleanBase64 = imageData.replace(/^data:image\/[a-z]+;base64,/, '');
    
    // Get the model directly from Gemini SDK
    const model = genAI.getGenerativeModel({ 
      model: "gemini-2.5-flash-image-preview" 
    });

    // Generate content directly using the SDK
    const result = await model.generateContent([
      prompt,
      {
        inlineData: {
          mimeType: "image/png",
          data: cleanBase64
        }
      }
    ]);

    const response = await result.response;
    
    // Extract the generated image data
    const generatedImage = response.candidates?.[0]?.content?.parts?.find(
      part => part.inlineData && part.inlineData.mimeType?.startsWith('image/')
    );

    if (!generatedImage?.inlineData?.data) {
      throw new Error('No image generated by Gemini API');
    }

    return generatedImage.inlineData.data;
  } catch (error) {
    console.error('Error generating image:', error);
    throw error;
  }
};

/**
 * Transform Gemini response to match the existing render API format
 * This ensures compatibility with the current render system
 */
export const transformGeminiResponse = (imageDataUrl: string) => {
  // Extract just the base64 data from the data URL
  const base64Data = imageDataUrl.replace(/^data:image\/[a-z]+;base64,/, '');
  
  return {
    success: true,
    mode: "fastrack",
    model_used: "gemini-2.5-flash-image-preview",
    enhanced_prompt: "Make this sketch photorealistic.",
    output: [{
      type: "image_generation_call",
      result: base64Data,
      enhanced_description: "Photorealistic render generated by Gemini 2.5 Flash"
    }],
    message: "Render complete using Gemini 2.5 Flash"
  };
};
